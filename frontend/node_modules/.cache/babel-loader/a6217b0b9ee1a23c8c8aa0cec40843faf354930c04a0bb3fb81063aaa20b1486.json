{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmost\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\online-shop\\\\client\\\\src\\\\pages\\\\DevicePage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchOneDevices } from \"../api/admin/deviceApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DevicePage = () => {\n  _s();\n  const [device, setDevice] = useState({\n    info: []\n  });\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetchOneDevices(id).then(data => setDevice(data));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: process.env.REACT_APP_API_URL + device.img,\n          width: 300,\n          height: 300\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: device.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0426\\u0435\\u043D\\u0430: \", device.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433: \", device.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-dark\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: device.info.map(info => /*#__PURE__*/_jsxDEV(Row, {\n        children: [info.title, \": \", info.description]\n      }, info.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(DevicePage, \"T9p6zhXQttvR6iaNfkNQClwF7jM=\", false, function () {\n  return [useParams];\n});\n_c = DevicePage;\nexport default DevicePage;\nvar _c;\n$RefreshReg$(_c, \"DevicePage\");","map":{"version":3,"names":["useEffect","useState","Button","Col","Container","Row","Image","useParams","fetchOneDevices","jsxDEV","_jsxDEV","DevicePage","_s","device","setDevice","info","id","then","data","className","children","md","src","process","env","REACT_APP_API_URL","img","width","height","fileName","_jsxFileName","lineNumber","columnNumber","name","price","rating","variant","map","title","description","_c","$RefreshReg$"],"sources":["C:/Users/tmost/OneDrive/Рабочий стол/online-shop/client/src/pages/DevicePage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchOneDevices } from \"../api/admin/deviceApi\";\r\n\r\nconst DevicePage = () => {\r\n  const [device, setDevice] = useState({ info: [] });\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    fetchOneDevices(id).then((data) => setDevice(data));\r\n  }, [id]);\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Row>\r\n        <Col md={4}>\r\n          <Image src={process.env.REACT_APP_API_URL + device.img} width={300} height={300} />\r\n        </Col>\r\n        <Col md={4}>\r\n          <h2>{device.name}</h2>\r\n          <p>Цена: {device.price}</p>\r\n          <p>Рейтинг: {device.rating}</p>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Button variant=\"outline-dark\">Добавить в корзину</Button>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        {device.info.map((info) => (\r\n          <Row key={info.id}>\r\n            {info.title}: {info.description}\r\n          </Row>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DevicePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}